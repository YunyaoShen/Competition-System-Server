<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysOrganizationMapper">
    
    <resultMap type="SysOrganization" id="SysOrganizationResult">
        <result property="organizationId"    column="organization_id"    />
        <result property="organizationName"    column="organization_name"    />
        <result property="organizationField"    column="organization_field"    />
        <result property="organizationPho"    column="organization_pho"    />
        <result property="organizationRemark"    column="organization_remark"    />
    </resultMap>

    <sql id="selectSysOrganizationVo">
        select organization_id, organization_name, organization_field, organization_pho, organization_remark from sys_organization
    </sql>

    <select id="selectSysOrganizationList" parameterType="SysOrganization" resultMap="SysOrganizationResult">
        <include refid="selectSysOrganizationVo"/>
        <where>  
            <if test="organizationName != null  and organizationName != ''"> and organization_name like concat('%', #{organizationName}, '%')</if>
            <if test="organizationField != null  and organizationField != ''"> and organization_field = #{organizationField}</if>
            <if test="organizationPho != null  and organizationPho != ''"> and organization_pho = #{organizationPho}</if>
            <if test="organizationRemark != null  and organizationRemark != ''"> and organization_remark = #{organizationRemark}</if>
        </where>
    </select>
    
    <select id="selectSysOrganizationByOrganizationId" parameterType="Long" resultMap="SysOrganizationResult">
        <include refid="selectSysOrganizationVo"/>
        where organization_id = #{organizationId}
    </select>
        
    <insert id="insertSysOrganization" parameterType="SysOrganization" useGeneratedKeys="true" keyProperty="organizationId">
        insert into sys_organization
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="organizationName != null and organizationName != ''">organization_name,</if>
            <if test="organizationField != null and organizationField != ''">organization_field,</if>
            <if test="organizationPho != null and organizationPho != ''">organization_pho,</if>
            <if test="organizationRemark != null">organization_remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="organizationName != null and organizationName != ''">#{organizationName},</if>
            <if test="organizationField != null and organizationField != ''">#{organizationField},</if>
            <if test="organizationPho != null and organizationPho != ''">#{organizationPho},</if>
            <if test="organizationRemark != null">#{organizationRemark},</if>
         </trim>
    </insert>

    <update id="updateSysOrganization" parameterType="SysOrganization">
        update sys_organization
        <trim prefix="SET" suffixOverrides=",">
            <if test="organizationName != null and organizationName != ''">organization_name = #{organizationName},</if>
            <if test="organizationField != null and organizationField != ''">organization_field = #{organizationField},</if>
            <if test="organizationPho != null and organizationPho != ''">organization_pho = #{organizationPho},</if>
            <if test="organizationRemark != null">organization_remark = #{organizationRemark},</if>
        </trim>
        where organization_id = #{organizationId}
    </update>

    <delete id="deleteSysOrganizationByOrganizationId" parameterType="Long">
        delete from sys_organization where organization_id = #{organizationId}
    </delete>

    <delete id="deleteSysOrganizationByOrganizationIds" parameterType="String">
        delete from sys_organization where organization_id in 
        <foreach item="organizationId" collection="array" open="(" separator="," close=")">
            #{organizationId}
        </foreach>
    </delete>
</mapper>